{
  "version": 3,
  "sources": ["../../structs/Bot.ts"],
  "sourcesContent": ["import {\n  ApplicationCommandDataResolvable,\n  ChatInputCommandInteraction,\n  Client,\n  Collection,\n  Events,\n  Interaction,\n  REST,\n  Routes,\n  Snowflake\n} from \"discord.js\";\nimport { readdirSync } from \"fs\";\nimport { join } from \"path\";\nimport { Command } from \"../interfaces/Command\";\nimport { checkPermissions, PermissionResult } from \"../utils/checkPermissions\";\nimport { config } from \"../utils/config\";\nimport { i18n } from \"../utils/i18n\";\nimport { MissingPermissionsException } from \"../utils/MissingPermissionsException\";\nimport { MusicQueue } from \"./MusicQueue\";\n\nexport class Bot {\n  public readonly prefix = config.PREFIX;\n  public commands = new Collection<string, Command>();\n  public slashCommands = new Array<ApplicationCommandDataResolvable>();\n  public slashCommandsMap = new Collection<string, Command>();\n  public cooldowns = new Collection<string, Collection<Snowflake, number>>();\n  public queues = new Collection<Snowflake, MusicQueue>();\n\n  public constructor(public readonly client: Client) {\n    this.client.login(config.TOKEN);\n\n    this.client.on(\"ready\", () => {\n      console.log(`${this.client.user!.username} ready!`);\n\n      this.registerSlashCommands();\n    });\n\n    this.client.on(\"warn\", (info) => console.log(info));\n    this.client.on(\"error\", console.error);\n\n    this.onInteractionCreate();\n  }\n\n  private async registerSlashCommands() {\n    const rest = new REST({ version: \"9\" }).setToken(config.TOKEN);\n\n    const commandFiles = readdirSync(join(__dirname, \"..\", \"commands\")).filter((file) => !file.endsWith(\".map\"));\n\n    for (const file of commandFiles) {\n      const command = await import(join(__dirname, \"..\", \"commands\", `${file}`));\n\n      this.slashCommands.push(command.default.data);\n      this.slashCommandsMap.set(command.default.data.name, command.default);\n    }\n\n    await rest.put(Routes.applicationCommands(this.client.user!.id), { body: this.slashCommands });\n  }\n\n  private async onInteractionCreate() {\n    this.client.on(Events.InteractionCreate, async (interaction: Interaction): Promise<any> => {\n      if (!interaction.isChatInputCommand()) return;\n\n      const command = this.slashCommandsMap.get(interaction.commandName);\n\n      if (!command) return;\n\n      if (!this.cooldowns.has(interaction.commandName)) {\n        this.cooldowns.set(interaction.commandName, new Collection());\n      }\n\n      const now = Date.now();\n      const timestamps: any = this.cooldowns.get(interaction.commandName);\n      const cooldownAmount = (command.cooldown || 1) * 1000;\n\n      if (timestamps.has(interaction.user.id)) {\n        const expirationTime = timestamps.get(interaction.user.id) + cooldownAmount;\n\n        if (now < expirationTime) {\n          const timeLeft = (expirationTime - now) / 1000;\n          return interaction.reply({\n            content: i18n.__mf(\"common.cooldownMessage\", {\n              time: timeLeft.toFixed(1),\n              name: interaction.commandName\n            }),\n            ephemeral: true\n          });\n        }\n      }\n\n      timestamps.set(interaction.user.id, now);\n      setTimeout(() => timestamps.delete(interaction.user.id), cooldownAmount);\n\n      try {\n        const permissionsCheck: PermissionResult = await checkPermissions(command, interaction);\n\n        if (permissionsCheck.result) {\n          command.execute(interaction as ChatInputCommandInteraction);\n        } else {\n          throw new MissingPermissionsException(permissionsCheck.missing);\n        }\n      } catch (error: any) {\n        console.error(error);\n\n        if (error.message.includes(\"permissions\")) {\n          interaction.reply({ content: error.toString(), ephemeral: true }).catch(console.error);\n        } else {\n          interaction.reply({ content: i18n.__(\"common.errorCommand\"), ephemeral: true }).catch(console.error);\n        }\n      }\n    });\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAUO;AACP,gBAA4B;AAC5B,kBAAqB;AAErB,8BAAmD;AACnD,oBAAuB;AACvB,kBAAqB;AACrB,yCAA4C;AAGrC,MAAM,IAAI;AAAA,EAQR,YAA4B,QAAgB;AAAhB;AACjC,SAAK,OAAO,MAAM,qBAAO,KAAK;AAE9B,SAAK,OAAO,GAAG,SAAS,MAAM;AAC5B,cAAQ,IAAI,GAAG,KAAK,OAAO,KAAM,iBAAiB;AAElD,WAAK,sBAAsB;AAAA,IAC7B,CAAC;AAED,SAAK,OAAO,GAAG,QAAQ,CAAC,SAAS,QAAQ,IAAI,IAAI,CAAC;AAClD,SAAK,OAAO,GAAG,SAAS,QAAQ,KAAK;AAErC,SAAK,oBAAoB;AAAA,EAC3B;AAAA,EApBgB,SAAS,qBAAO;AAAA,EACzB,WAAW,IAAI,0BAA4B;AAAA,EAC3C,gBAAgB,IAAI,MAAwC;AAAA,EAC5D,mBAAmB,IAAI,0BAA4B;AAAA,EACnD,YAAY,IAAI,0BAAkD;AAAA,EAClE,SAAS,IAAI,0BAAkC;AAAA,EAiBtD,MAAc,wBAAwB;AACpC,UAAM,OAAO,IAAI,oBAAK,EAAE,SAAS,IAAI,CAAC,EAAE,SAAS,qBAAO,KAAK;AAE7D,UAAM,mBAAe,2BAAY,kBAAK,WAAW,MAAM,UAAU,CAAC,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,SAAS,MAAM,CAAC;AAE3G,eAAW,QAAQ,cAAc;AAC/B,YAAM,UAAU,MAAM,WAAO,kBAAK,WAAW,MAAM,YAAY,GAAG,MAAM;AAExE,WAAK,cAAc,KAAK,QAAQ,QAAQ,IAAI;AAC5C,WAAK,iBAAiB,IAAI,QAAQ,QAAQ,KAAK,MAAM,QAAQ,OAAO;AAAA,IACtE;AAEA,UAAM,KAAK,IAAI,sBAAO,oBAAoB,KAAK,OAAO,KAAM,EAAE,GAAG,EAAE,MAAM,KAAK,cAAc,CAAC;AAAA,EAC/F;AAAA,EAEA,MAAc,sBAAsB;AAClC,SAAK,OAAO,GAAG,sBAAO,mBAAmB,OAAO,gBAA2C;AACzF,UAAI,CAAC,YAAY,mBAAmB;AAAG;AAEvC,YAAM,UAAU,KAAK,iBAAiB,IAAI,YAAY,WAAW;AAEjE,UAAI,CAAC;AAAS;AAEd,UAAI,CAAC,KAAK,UAAU,IAAI,YAAY,WAAW,GAAG;AAChD,aAAK,UAAU,IAAI,YAAY,aAAa,IAAI,0BAAW,CAAC;AAAA,MAC9D;AAEA,YAAM,MAAM,KAAK,IAAI;AACrB,YAAM,aAAkB,KAAK,UAAU,IAAI,YAAY,WAAW;AAClE,YAAM,kBAAkB,QAAQ,YAAY,KAAK;AAEjD,UAAI,WAAW,IAAI,YAAY,KAAK,EAAE,GAAG;AACvC,cAAM,iBAAiB,WAAW,IAAI,YAAY,KAAK,EAAE,IAAI;AAE7D,YAAI,MAAM,gBAAgB;AACxB,gBAAM,YAAY,iBAAiB,OAAO;AAC1C,iBAAO,YAAY,MAAM;AAAA,YACvB,SAAS,iBAAK,KAAK,0BAA0B;AAAA,cAC3C,MAAM,SAAS,QAAQ,CAAC;AAAA,cACxB,MAAM,YAAY;AAAA,YACpB,CAAC;AAAA,YACD,WAAW;AAAA,UACb,CAAC;AAAA,QACH;AAAA,MACF;AAEA,iBAAW,IAAI,YAAY,KAAK,IAAI,GAAG;AACvC,iBAAW,MAAM,WAAW,OAAO,YAAY,KAAK,EAAE,GAAG,cAAc;AAEvE,UAAI;AACF,cAAM,mBAAqC,UAAM,0CAAiB,SAAS,WAAW;AAEtF,YAAI,iBAAiB,QAAQ;AAC3B,kBAAQ,QAAQ,WAA0C;AAAA,QAC5D,OAAO;AACL,gBAAM,IAAI,+DAA4B,iBAAiB,OAAO;AAAA,QAChE;AAAA,MACF,SAAS,OAAP;AACA,gBAAQ,MAAM,KAAK;AAEnB,YAAI,MAAM,QAAQ,SAAS,aAAa,GAAG;AACzC,sBAAY,MAAM,EAAE,SAAS,MAAM,SAAS,GAAG,WAAW,KAAK,CAAC,EAAE,MAAM,QAAQ,KAAK;AAAA,QACvF,OAAO;AACL,sBAAY,MAAM,EAAE,SAAS,iBAAK,GAAG,qBAAqB,GAAG,WAAW,KAAK,CAAC,EAAE,MAAM,QAAQ,KAAK;AAAA,QACrG;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AACF;",
  "names": []
}
