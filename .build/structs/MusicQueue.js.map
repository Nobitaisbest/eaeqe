{
  "version": 3,
  "sources": ["../../structs/MusicQueue.ts"],
  "sourcesContent": ["import {\n  AudioPlayer,\n  AudioPlayerState,\n  AudioPlayerStatus,\n  AudioResource,\n  createAudioPlayer,\n  entersState,\n  NoSubscriberBehavior,\n  VoiceConnection,\n  VoiceConnectionDisconnectReason,\n  VoiceConnectionState,\n  VoiceConnectionStatus\n} from \"@discordjs/voice\";\nimport { CommandInteraction, Message, TextChannel, User } from \"discord.js\";\nimport { promisify } from \"node:util\";\nimport { bot } from \"../index\";\nimport { QueueOptions } from \"../interfaces/QueueOptions\";\nimport { config } from \"../utils/config\";\nimport { i18n } from \"../utils/i18n\";\nimport { canModifyQueue } from \"../utils/queue\";\nimport { Song } from \"./Song\";\n\nconst wait = promisify(setTimeout);\n\nexport class MusicQueue {\n  public readonly interaction: CommandInteraction;\n  public readonly connection: VoiceConnection;\n  public readonly player: AudioPlayer;\n  public readonly textChannel: TextChannel;\n  public readonly bot = bot;\n\n  public resource: AudioResource;\n  public songs: Song[] = [];\n  public volume = config.DEFAULT_VOLUME || 100;\n  public loop = false;\n  public muted = false;\n  public waitTimeout: NodeJS.Timeout | null;\n  private queueLock = false;\n  private readyLock = false;\n  private stopped = false;\n\n  public constructor(options: QueueOptions) {\n    Object.assign(this, options);\n\n    this.player = createAudioPlayer({ behaviors: { noSubscriber: NoSubscriberBehavior.Play } });\n    this.connection.subscribe(this.player);\n\n    const networkStateChangeHandler = (oldNetworkState: any, newNetworkState: any) => {\n      const newUdp = Reflect.get(newNetworkState, \"udp\");\n      clearInterval(newUdp?.keepAliveInterval);\n    };\n\n    this.connection.on(\"stateChange\" as any, async (oldState: VoiceConnectionState, newState: VoiceConnectionState) => {\n      Reflect.get(oldState, \"networking\")?.off(\"stateChange\", networkStateChangeHandler);\n      Reflect.get(newState, \"networking\")?.on(\"stateChange\", networkStateChangeHandler);\n\n      if (newState.status === VoiceConnectionStatus.Disconnected) {\n        if (newState.reason === VoiceConnectionDisconnectReason.WebSocketClose && newState.closeCode === 4014) {\n          try {\n            this.stop();\n          } catch (e) {\n            console.log(e);\n            this.stop();\n          }\n        } else if (this.connection.rejoinAttempts < 5) {\n          await wait((this.connection.rejoinAttempts + 1) * 5_000);\n          this.connection.rejoin();\n        } else {\n          this.connection.destroy();\n        }\n      } else if (\n        !this.readyLock &&\n        (newState.status === VoiceConnectionStatus.Connecting || newState.status === VoiceConnectionStatus.Signalling)\n      ) {\n        this.readyLock = true;\n        try {\n          await entersState(this.connection, VoiceConnectionStatus.Ready, 20_000);\n        } catch {\n          if (this.connection.state.status !== VoiceConnectionStatus.Destroyed) {\n            try {\n              this.connection.destroy();\n            } catch {}\n          }\n        } finally {\n          this.readyLock = false;\n        }\n      }\n    });\n\n    this.player.on(\"stateChange\" as any, async (oldState: AudioPlayerState, newState: AudioPlayerState) => {\n      if (oldState.status !== AudioPlayerStatus.Idle && newState.status === AudioPlayerStatus.Idle) {\n        if (this.loop && this.songs.length) {\n          this.songs.push(this.songs.shift()!);\n        } else {\n          this.songs.shift();\n          if (!this.songs.length) return this.stop();\n        }\n\n        if (this.songs.length || this.resource.audioPlayer) this.processQueue();\n      } else if (oldState.status === AudioPlayerStatus.Buffering && newState.status === AudioPlayerStatus.Playing) {\n        this.sendPlayingMessage(newState);\n      }\n    });\n\n    this.player.on(\"error\", (error) => {\n      console.error(error);\n\n      if (this.loop && this.songs.length) {\n        this.songs.push(this.songs.shift()!);\n      } else {\n        this.songs.shift();\n      }\n\n      this.processQueue();\n    });\n  }\n\n  public enqueue(...songs: Song[]) {\n    if (this.waitTimeout !== null) clearTimeout(this.waitTimeout);\n    this.waitTimeout = null;\n    this.stopped = false;\n    this.songs = this.songs.concat(songs);\n    this.processQueue();\n  }\n\n  public stop() {\n    if (this.stopped) return;\n\n    this.stopped = true;\n    this.loop = false;\n    this.songs = [];\n    this.player.stop();\n\n    !config.PRUNING && this.textChannel.send(i18n.__(\"play.queueEnded\")).catch(console.error);\n\n    if (this.waitTimeout !== null) return;\n\n    this.waitTimeout = setTimeout(() => {\n      if (this.connection.state.status !== VoiceConnectionStatus.Destroyed) {\n        try {\n          this.connection.destroy();\n        } catch {}\n      }\n      bot.queues.delete(this.interaction.guild!.id);\n\n      !config.PRUNING && this.textChannel.send(i18n.__(\"play.leaveChannel\"));\n    }, config.STAY_TIME * 1000);\n  }\n\n  public async processQueue(): Promise<void> {\n    if (this.queueLock || this.player.state.status !== AudioPlayerStatus.Idle) {\n      return;\n    }\n\n    if (!this.songs.length) {\n      return this.stop();\n    }\n\n    this.queueLock = true;\n\n    const next = this.songs[0];\n\n    try {\n      const resource = await next.makeResource();\n\n      this.resource = resource!;\n      this.player.play(this.resource);\n      this.resource.volume?.setVolumeLogarithmic(this.volume / 100);\n    } catch (error) {\n      console.error(error);\n\n      return this.processQueue();\n    } finally {\n      this.queueLock = false;\n    }\n  }\n\n  private async sendPlayingMessage(newState: any) {\n    const song = (newState.resource as AudioResource<Song>).metadata;\n\n    let playingMessage: Message;\n\n    try {\n      playingMessage = await this.textChannel.send((newState.resource as AudioResource<Song>).metadata.startMessage());\n\n      await playingMessage.react(\"\u23ED\");\n      await playingMessage.react(\"\u23EF\");\n      await playingMessage.react(\"\uD83D\uDD07\");\n      await playingMessage.react(\"\uD83D\uDD09\");\n      await playingMessage.react(\"\uD83D\uDD0A\");\n      await playingMessage.react(\"\uD83D\uDD01\");\n      await playingMessage.react(\"\uD83D\uDD00\");\n      await playingMessage.react(\"\u23F9\");\n    } catch (error: any) {\n      console.error(error);\n      this.textChannel.send(error.message);\n      return;\n    }\n\n    const filter = (reaction: any, user: User) => user.id !== this.textChannel.client.user!.id;\n\n    const collector = playingMessage.createReactionCollector({\n      filter,\n      time: song.duration > 0 ? song.duration * 1000 : 600000\n    });\n\n    collector.on(\"collect\", async (reaction, user) => {\n      if (!this.songs) return;\n\n      const member = await playingMessage.guild!.members.fetch(user);\n\n      switch (reaction.emoji.name) {\n        case \"\u23ED\":\n          reaction.users.remove(user).catch(console.error);\n          await this.bot.slashCommandsMap.get(\"skip\")!.execute(this.interaction);\n          break;\n\n        case \"\u23EF\":\n          reaction.users.remove(user).catch(console.error);\n          if (this.player.state.status == AudioPlayerStatus.Playing) {\n            await this.bot.slashCommandsMap.get(\"pause\")!.execute(this.interaction);\n          } else {\n            await this.bot.slashCommandsMap.get(\"resume\")!.execute(this.interaction);\n          }\n          break;\n\n        case \"\uD83D\uDD07\":\n          reaction.users.remove(user).catch(console.error);\n          if (!canModifyQueue(member)) return i18n.__(\"common.errorNotChannel\");\n          this.muted = !this.muted;\n          if (this.muted) {\n            this.resource.volume?.setVolumeLogarithmic(0);\n            this.textChannel.send(i18n.__mf(\"play.mutedSong\", { author: user })).catch(console.error);\n          } else {\n            this.resource.volume?.setVolumeLogarithmic(this.volume / 100);\n            this.textChannel.send(i18n.__mf(\"play.unmutedSong\", { author: user })).catch(console.error);\n          }\n          break;\n\n        case \"\uD83D\uDD09\":\n          reaction.users.remove(user).catch(console.error);\n          if (this.volume == 0) return;\n          if (!canModifyQueue(member)) return i18n.__(\"common.errorNotChannel\");\n          this.volume = Math.max(this.volume - 10, 0);\n          this.resource.volume?.setVolumeLogarithmic(this.volume / 100);\n          this.textChannel\n            .send(i18n.__mf(\"play.decreasedVolume\", { author: user, volume: this.volume }))\n            .catch(console.error);\n          break;\n\n        case \"\uD83D\uDD0A\":\n          reaction.users.remove(user).catch(console.error);\n          if (this.volume == 100) return;\n          if (!canModifyQueue(member)) return i18n.__(\"common.errorNotChannel\");\n          this.volume = Math.min(this.volume + 10, 100);\n          this.resource.volume?.setVolumeLogarithmic(this.volume / 100);\n          this.textChannel\n            .send(i18n.__mf(\"play.increasedVolume\", { author: user, volume: this.volume }))\n            .catch(console.error);\n          break;\n\n        case \"\uD83D\uDD01\":\n          reaction.users.remove(user).catch(console.error);\n          await this.bot.slashCommandsMap.get(\"loop\")!.execute(this.interaction);\n          break;\n\n        case \"\uD83D\uDD00\":\n          reaction.users.remove(user).catch(console.error);\n          await this.bot.slashCommandsMap.get(\"shuffle\")!.execute(this.interaction);\n          break;\n\n        case \"\u23F9\":\n          reaction.users.remove(user).catch(console.error);\n          await this.bot.slashCommandsMap.get(\"stop\")!.execute(this.interaction);\n          collector.stop();\n          break;\n\n        default:\n          reaction.users.remove(user).catch(console.error);\n          break;\n      }\n    });\n\n    collector.on(\"end\", () => {\n      playingMessage.reactions.removeAll().catch(console.error);\n\n      if (config.PRUNING) {\n        setTimeout(() => {\n          playingMessage.delete().catch();\n        }, 3000);\n      }\n    });\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
