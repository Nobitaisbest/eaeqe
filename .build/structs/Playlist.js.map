{
  "version": 3,
  "sources": ["../../structs/Playlist.ts"],
  "sourcesContent": ["import youtube, { Playlist as YoutubePlaylist } from \"youtube-sr\";\nimport { config } from \"../utils/config\";\nimport { Song } from \"./Song\";\n\nconst pattern = /^.*(youtu.be\\/|list=)([^#\\&\\?]*).*/i;\n\nexport class Playlist {\n  public data: YoutubePlaylist;\n  public videos: Song[];\n\n  public constructor(playlist: YoutubePlaylist) {\n    this.data = playlist;\n\n    this.videos = this.data.videos\n      .filter((video) => video.title != \"Private video\" && video.title != \"Deleted video\")\n      .slice(0, config.MAX_PLAYLIST_SIZE - 1)\n      .map((video) => {\n        return new Song({\n          title: video.title!,\n          url: `https://youtube.com/watch?v=${video.id}`,\n          duration: video.duration / 1000\n        });\n      });\n  }\n\n  public static async from(url: string = \"\", search: string = \"\") {\n    const urlValid = pattern.test(url);\n    let playlist;\n\n    if (urlValid) {\n      playlist = await youtube.getPlaylist(url);\n    } else {\n      const result = await youtube.searchOne(search, \"playlist\");\n\n      playlist = await youtube.getPlaylist(result.url!);\n    }\n\n    return new this(playlist);\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAqD;AACrD,oBAAuB;AACvB,kBAAqB;AAErB,MAAM,UAAU;AAET,MAAM,SAAS;AAAA,EACb;AAAA,EACA;AAAA,EAEA,YAAY,UAA2B;AAC5C,SAAK,OAAO;AAEZ,SAAK,SAAS,KAAK,KAAK,OACrB,OAAO,CAAC,UAAU,MAAM,SAAS,mBAAmB,MAAM,SAAS,eAAe,EAClF,MAAM,GAAG,qBAAO,oBAAoB,CAAC,EACrC,IAAI,CAAC,UAAU;AACd,aAAO,IAAI,iBAAK;AAAA,QACd,OAAO,MAAM;AAAA,QACb,KAAK,+BAA+B,MAAM;AAAA,QAC1C,UAAU,MAAM,WAAW;AAAA,MAC7B,CAAC;AAAA,IACH,CAAC;AAAA,EACL;AAAA,EAEA,aAAoB,KAAK,MAAc,IAAI,SAAiB,IAAI;AAC9D,UAAM,WAAW,QAAQ,KAAK,GAAG;AACjC,QAAI;AAEJ,QAAI,UAAU;AACZ,iBAAW,MAAM,kBAAAA,QAAQ,YAAY,GAAG;AAAA,IAC1C,OAAO;AACL,YAAM,SAAS,MAAM,kBAAAA,QAAQ,UAAU,QAAQ,UAAU;AAEzD,iBAAW,MAAM,kBAAAA,QAAQ,YAAY,OAAO,GAAI;AAAA,IAClD;AAEA,WAAO,IAAI,KAAK,QAAQ;AAAA,EAC1B;AACF;",
  "names": ["youtube"]
}
