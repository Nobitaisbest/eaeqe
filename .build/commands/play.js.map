{
  "version": 3,
  "sources": ["../../commands/play.ts"],
  "sourcesContent": ["import { DiscordGatewayAdapterCreator, joinVoiceChannel } from \"@discordjs/voice\";\nimport { ChatInputCommandInteraction, PermissionsBitField, SlashCommandBuilder, TextChannel } from \"discord.js\";\nimport { bot } from \"../index\";\nimport { MusicQueue } from \"../structs/MusicQueue\";\nimport { Song } from \"../structs/Song\";\nimport { i18n } from \"../utils/i18n\";\nimport { playlistPattern } from \"../utils/patterns\";\n\nexport default {\n  data: new SlashCommandBuilder()\n    .setName(\"play\")\n    .setDescription(i18n.__(\"play.description\"))\n    .addStringOption((option) => option.setName(\"song\").setDescription(\"The song you want to play\").setRequired(true)),\n  cooldown: 3,\n  permissions: [\n    PermissionsBitField.Flags.Connect,\n    PermissionsBitField.Flags.Speak,\n    PermissionsBitField.Flags.AddReactions,\n    PermissionsBitField.Flags.ManageMessages\n  ],\n  async execute(interaction: ChatInputCommandInteraction, input: string) {\n    let argSongName = interaction.options.getString(\"song\");\n    if (!argSongName) argSongName = input;\n\n    const guildMember = interaction.guild!.members.cache.get(interaction.user.id);\n    const { channel } = guildMember!.voice;\n\n    if (!channel)\n      return interaction.reply({ content: i18n.__(\"play.errorNotChannel\"), ephemeral: true }).catch(console.error);\n\n    const queue = bot.queues.get(interaction.guild!.id);\n\n    if (queue && channel.id !== queue.connection.joinConfig.channelId)\n      return interaction\n        .reply({\n          content: i18n.__mf(\"play.errorNotInSameChannel\", { user: bot.client.user!.username }),\n          ephemeral: true\n        })\n        .catch(console.error);\n\n    if (!argSongName)\n      return interaction\n        .reply({ content: i18n.__mf(\"play.usageReply\", { prefix: bot.prefix }), ephemeral: true })\n        .catch(console.error);\n\n    const url = argSongName;\n\n    if (interaction.replied) await interaction.editReply(\"\u23F3 Loading...\").catch(console.error);\n    else await interaction.reply(\"\u23F3 Loading...\");\n\n    // Start the playlist if playlist url was provided\n    if (playlistPattern.test(url)) {\n      await interaction.editReply(\"\uD83D\uDD17 Link is playlist\").catch(console.error);\n\n      return bot.slashCommandsMap.get(\"playlist\")!.execute(interaction);\n    }\n\n    let song;\n\n    try {\n      song = await Song.from(url, url);\n    } catch (error: any) {\n      if (error.name == \"NoResults\")\n        return interaction\n          .reply({ content: i18n.__mf(\"play.errorNoResults\", { url: `<${url}>` }), ephemeral: true })\n          .catch(console.error);\n      if (error.name == \"InvalidURL\")\n        return interaction\n          .reply({ content: i18n.__mf(\"play.errorInvalidURL\", { url: `<${url}>` }), ephemeral: true })\n          .catch(console.error);\n\n      console.error(error);\n      if (interaction.replied)\n        return await interaction.editReply({ content: i18n.__(\"common.errorCommand\") }).catch(console.error);\n      else return interaction.reply({ content: i18n.__(\"common.errorCommand\"), ephemeral: true }).catch(console.error);\n    }\n\n    if (queue) {\n      queue.enqueue(song);\n\n      return (interaction.channel as TextChannel)\n        .send({ content: i18n.__mf(\"play.queueAdded\", { title: song.title, author: interaction.user.id }) })\n        .catch(console.error);\n    }\n\n    const newQueue = new MusicQueue({\n      interaction,\n      textChannel: interaction.channel! as TextChannel,\n      connection: joinVoiceChannel({\n        channelId: channel.id,\n        guildId: channel.guild.id,\n        adapterCreator: channel.guild.voiceAdapterCreator as DiscordGatewayAdapterCreator\n      })\n    });\n\n    bot.queues.set(interaction.guild!.id, newQueue);\n\n    newQueue.enqueue(song);\n    interaction.deleteReply().catch(console.error);\n  }\n};\n"],
  "mappings": "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",
  "names": []
}
