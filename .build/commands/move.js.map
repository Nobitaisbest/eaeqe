{
  "version": 3,
  "sources": ["../../commands/move.ts"],
  "sourcesContent": ["import move from \"array-move\";\nimport { ChatInputCommandInteraction, SlashCommandBuilder } from \"discord.js\";\nimport { bot } from \"../index\";\nimport { i18n } from \"../utils/i18n\";\nimport { canModifyQueue } from \"../utils/queue\";\n\nexport default {\n  data: new SlashCommandBuilder()\n    .setName(\"move\")\n    .setDescription(i18n.__(\"move.description\"))\n    .addIntegerOption((option) =>\n      option.setName(\"movefrom\").setDescription(i18n.__(\"move.args.movefrom\")).setRequired(true)\n    )\n    .addIntegerOption((option) =>\n      option.setName(\"moveto\").setDescription(i18n.__(\"move.args.moveto\")).setRequired(true)\n    ),\n  execute(interaction: ChatInputCommandInteraction) {\n    const movefromArg = interaction.options.getInteger(\"movefrom\");\n    const movetoArg = interaction.options.getInteger(\"moveto\");\n\n    const guildMemer = interaction.guild!.members.cache.get(interaction.user.id);\n    const queue = bot.queues.get(interaction.guild!.id);\n\n    if (!queue) return interaction.reply(i18n.__(\"move.errorNotQueue\")).catch(console.error);\n\n    if (!canModifyQueue(guildMemer!)) return;\n\n    if (!movefromArg || !movetoArg)\n      return interaction.reply({ content: i18n.__mf(\"move.usagesReply\", { prefix: bot.prefix }), ephemeral: true });\n\n    if (isNaN(movefromArg) || movefromArg <= 1)\n      return interaction.reply({ content: i18n.__mf(\"move.usagesReply\", { prefix: bot.prefix }), ephemeral: true });\n\n    let song = queue.songs[movefromArg - 1];\n\n    queue.songs = move(queue.songs, movefromArg - 1, movetoArg == 1 ? 1 : movetoArg - 1);\n\n    interaction.reply({\n      content: i18n.__mf(\"move.result\", {\n        author: interaction.user.id,\n        title: song.title,\n        index: movetoArg == 1 ? 1 : movetoArg\n      })\n    });\n  }\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAiB;AACjB,qBAAiE;AACjE,eAAoB;AACpB,kBAAqB;AACrB,mBAA+B;AAE/B,IAAO,eAAQ;AAAA,EACb,MAAM,IAAI,mCAAoB,EAC3B,QAAQ,MAAM,EACd,eAAe,iBAAK,GAAG,kBAAkB,CAAC,EAC1C;AAAA,IAAiB,CAAC,WACjB,OAAO,QAAQ,UAAU,EAAE,eAAe,iBAAK,GAAG,oBAAoB,CAAC,EAAE,YAAY,IAAI;AAAA,EAC3F,EACC;AAAA,IAAiB,CAAC,WACjB,OAAO,QAAQ,QAAQ,EAAE,eAAe,iBAAK,GAAG,kBAAkB,CAAC,EAAE,YAAY,IAAI;AAAA,EACvF;AAAA,EACF,QAAQ,aAA0C;AAChD,UAAM,cAAc,YAAY,QAAQ,WAAW,UAAU;AAC7D,UAAM,YAAY,YAAY,QAAQ,WAAW,QAAQ;AAEzD,UAAM,aAAa,YAAY,MAAO,QAAQ,MAAM,IAAI,YAAY,KAAK,EAAE;AAC3E,UAAM,QAAQ,aAAI,OAAO,IAAI,YAAY,MAAO,EAAE;AAElD,QAAI,CAAC;AAAO,aAAO,YAAY,MAAM,iBAAK,GAAG,oBAAoB,CAAC,EAAE,MAAM,QAAQ,KAAK;AAEvF,QAAI,KAAC,6BAAe,UAAW;AAAG;AAElC,QAAI,CAAC,eAAe,CAAC;AACnB,aAAO,YAAY,MAAM,EAAE,SAAS,iBAAK,KAAK,oBAAoB,EAAE,QAAQ,aAAI,OAAO,CAAC,GAAG,WAAW,KAAK,CAAC;AAE9G,QAAI,MAAM,WAAW,KAAK,eAAe;AACvC,aAAO,YAAY,MAAM,EAAE,SAAS,iBAAK,KAAK,oBAAoB,EAAE,QAAQ,aAAI,OAAO,CAAC,GAAG,WAAW,KAAK,CAAC;AAE9G,QAAI,OAAO,MAAM,MAAM,cAAc;AAErC,UAAM,YAAQ,kBAAAA,SAAK,MAAM,OAAO,cAAc,GAAG,aAAa,IAAI,IAAI,YAAY,CAAC;AAEnF,gBAAY,MAAM;AAAA,MAChB,SAAS,iBAAK,KAAK,eAAe;AAAA,QAChC,QAAQ,YAAY,KAAK;AAAA,QACzB,OAAO,KAAK;AAAA,QACZ,OAAO,aAAa,IAAI,IAAI;AAAA,MAC9B,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AACF;",
  "names": ["move"]
}
