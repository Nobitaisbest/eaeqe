{
  "version": 3,
  "sources": ["../../commands/queue.ts"],
  "sourcesContent": ["import {\r\n  ChatInputCommandInteraction,\r\n  CommandInteraction,\r\n  EmbedBuilder,\r\n  MessageReaction,\r\n  PermissionsBitField,\r\n  SlashCommandBuilder,\r\n  TextChannel,\r\n  User\r\n} from \"discord.js\";\r\nimport { bot } from \"../index\";\r\nimport { Song } from \"../structs/Song\";\r\nimport { i18n } from \"../utils/i18n\";\r\n\r\nexport default {\r\n  data: new SlashCommandBuilder().setName(\"queue\").setDescription(i18n.__(\"queue.description\")),\r\n  cooldown: 5,\r\n  permissions: [PermissionsBitField.Flags.AddReactions, PermissionsBitField.Flags.ManageMessages],\r\n  async execute(interaction: ChatInputCommandInteraction) {\r\n    const queue = bot.queues.get(interaction.guild!.id);\r\n    if (!queue || !queue.songs.length) return interaction.reply({ content: i18n.__(\"queue.errorNotQueue\") });\r\n\r\n    let currentPage = 0;\r\n    const embeds = generateQueueEmbed(interaction, queue.songs);\r\n\r\n    await interaction.reply(\"\u23F3 Loading queue...\");\r\n\r\n    if (interaction.replied)\r\n      await interaction.editReply({\r\n        content: `**${i18n.__mf(\"queue.currentPage\")} ${currentPage + 1}/${embeds.length}**`,\r\n        embeds: [embeds[currentPage]]\r\n      });\r\n\r\n    const queueEmbed = await interaction.fetchReply();\r\n\r\n    try {\r\n      await queueEmbed.react(\"\u2B05\uFE0F\");\r\n      await queueEmbed.react(\"\u23F9\");\r\n      await queueEmbed.react(\"\u27A1\uFE0F\");\r\n    } catch (error: any) {\r\n      console.error(error);\r\n      (interaction.channel as TextChannel).send(error.message).catch(console.error);\r\n    }\r\n\r\n    const filter = (reaction: MessageReaction, user: User) =>\r\n      [\"\u2B05\uFE0F\", \"\u23F9\", \"\u27A1\uFE0F\"].includes(reaction.emoji.name!) && interaction.user.id === user.id;\r\n\r\n    const collector = queueEmbed.createReactionCollector({ filter, time: 60000 });\r\n\r\n    collector.on(\"collect\", async (reaction, user) => {\r\n      try {\r\n        if (reaction.emoji.name === \"\u27A1\uFE0F\") {\r\n          if (currentPage < embeds.length - 1) {\r\n            currentPage++;\r\n            queueEmbed.edit({\r\n              content: i18n.__mf(\"queue.currentPage\", { page: currentPage + 1, length: embeds.length }),\r\n              embeds: [embeds[currentPage]]\r\n            });\r\n          }\r\n        } else if (reaction.emoji.name === \"\u2B05\uFE0F\") {\r\n          if (currentPage !== 0) {\r\n            --currentPage;\r\n            queueEmbed.edit({\r\n              content: i18n.__mf(\"queue.currentPage\", { page: currentPage + 1, length: embeds.length }),\r\n              embeds: [embeds[currentPage]]\r\n            });\r\n          }\r\n        } else {\r\n          collector.stop();\r\n          reaction.message.reactions.removeAll();\r\n        }\r\n        await reaction.users.remove(interaction.user.id);\r\n      } catch (error: any) {\r\n        console.error(error);\r\n        return (interaction.channel as TextChannel).send(error.message).catch(console.error);\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nfunction generateQueueEmbed(interaction: CommandInteraction, songs: Song[]) {\r\n  let embeds = [];\r\n  let k = 10;\r\n\r\n  for (let i = 0; i < songs.length; i += 10) {\r\n    const current = songs.slice(i, k);\r\n    let j = i;\r\n    k += 10;\r\n\r\n    const info = current.map((track) => `${++j} - [${track.title}](${track.url})`).join(\"\\n\");\r\n\r\n    const embed = new EmbedBuilder()\r\n      .setTitle(i18n.__(\"queue.embedTitle\"))\r\n      .setThumbnail(interaction.guild?.iconURL()!)\r\n      .setColor(\"#F8AA2A\")\r\n      .setDescription(i18n.__mf(\"queue.embedCurrentSong\", { title: songs[0].title, url: songs[0].url, info: info }))\r\n      .setTimestamp();\r\n    embeds.push(embed);\r\n  }\r\n\r\n  return embeds;\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBASO;AACP,eAAoB;AAEpB,kBAAqB;AAErB,IAAO,gBAAQ;AAAA,EACb,MAAM,IAAI,mCAAoB,EAAE,QAAQ,OAAO,EAAE,eAAe,iBAAK,GAAG,mBAAmB,CAAC;AAAA,EAC5F,UAAU;AAAA,EACV,aAAa,CAAC,mCAAoB,MAAM,cAAc,mCAAoB,MAAM,cAAc;AAAA,EAC9F,MAAM,QAAQ,aAA0C;AACtD,UAAM,QAAQ,aAAI,OAAO,IAAI,YAAY,MAAO,EAAE;AAClD,QAAI,CAAC,SAAS,CAAC,MAAM,MAAM;AAAQ,aAAO,YAAY,MAAM,EAAE,SAAS,iBAAK,GAAG,qBAAqB,EAAE,CAAC;AAEvG,QAAI,cAAc;AAClB,UAAM,SAAS,mBAAmB,aAAa,MAAM,KAAK;AAE1D,UAAM,YAAY,MAAM,yBAAoB;AAE5C,QAAI,YAAY;AACd,YAAM,YAAY,UAAU;AAAA,QAC1B,SAAS,KAAK,iBAAK,KAAK,mBAAmB,KAAK,cAAc,KAAK,OAAO;AAAA,QAC1E,QAAQ,CAAC,OAAO,YAAY;AAAA,MAC9B,CAAC;AAEH,UAAM,aAAa,MAAM,YAAY,WAAW;AAEhD,QAAI;AACF,YAAM,WAAW,MAAM,cAAI;AAC3B,YAAM,WAAW,MAAM,QAAG;AAC1B,YAAM,WAAW,MAAM,cAAI;AAAA,IAC7B,SAAS,OAAP;AACA,cAAQ,MAAM,KAAK;AACnB,MAAC,YAAY,QAAwB,KAAK,MAAM,OAAO,EAAE,MAAM,QAAQ,KAAK;AAAA,IAC9E;AAEA,UAAM,SAAS,CAAC,UAA2B,SACzC,CAAC,gBAAM,UAAK,cAAI,EAAE,SAAS,SAAS,MAAM,IAAK,KAAK,YAAY,KAAK,OAAO,KAAK;AAEnF,UAAM,YAAY,WAAW,wBAAwB,EAAE,QAAQ,MAAM,IAAM,CAAC;AAE5E,cAAU,GAAG,WAAW,OAAO,UAAU,SAAS;AAChD,UAAI;AACF,YAAI,SAAS,MAAM,SAAS,gBAAM;AAChC,cAAI,cAAc,OAAO,SAAS,GAAG;AACnC;AACA,uBAAW,KAAK;AAAA,cACd,SAAS,iBAAK,KAAK,qBAAqB,EAAE,MAAM,cAAc,GAAG,QAAQ,OAAO,OAAO,CAAC;AAAA,cACxF,QAAQ,CAAC,OAAO,YAAY;AAAA,YAC9B,CAAC;AAAA,UACH;AAAA,QACF,WAAW,SAAS,MAAM,SAAS,gBAAM;AACvC,cAAI,gBAAgB,GAAG;AACrB,cAAE;AACF,uBAAW,KAAK;AAAA,cACd,SAAS,iBAAK,KAAK,qBAAqB,EAAE,MAAM,cAAc,GAAG,QAAQ,OAAO,OAAO,CAAC;AAAA,cACxF,QAAQ,CAAC,OAAO,YAAY;AAAA,YAC9B,CAAC;AAAA,UACH;AAAA,QACF,OAAO;AACL,oBAAU,KAAK;AACf,mBAAS,QAAQ,UAAU,UAAU;AAAA,QACvC;AACA,cAAM,SAAS,MAAM,OAAO,YAAY,KAAK,EAAE;AAAA,MACjD,SAAS,OAAP;AACA,gBAAQ,MAAM,KAAK;AACnB,eAAQ,YAAY,QAAwB,KAAK,MAAM,OAAO,EAAE,MAAM,QAAQ,KAAK;AAAA,MACrF;AAAA,IACF,CAAC;AAAA,EACH;AACF;AAEA,SAAS,mBAAmB,aAAiC,OAAe;AAhF5E;AAiFE,MAAI,SAAS,CAAC;AACd,MAAI,IAAI;AAER,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,IAAI;AACzC,UAAM,UAAU,MAAM,MAAM,GAAG,CAAC;AAChC,QAAI,IAAI;AACR,SAAK;AAEL,UAAM,OAAO,QAAQ,IAAI,CAAC,UAAU,GAAG,EAAE,QAAQ,MAAM,UAAU,MAAM,MAAM,EAAE,KAAK,IAAI;AAExF,UAAM,QAAQ,IAAI,4BAAa,EAC5B,SAAS,iBAAK,GAAG,kBAAkB,CAAC,EACpC,cAAa,iBAAY,UAAZ,mBAAmB,SAAU,EAC1C,SAAS,SAAS,EAClB,eAAe,iBAAK,KAAK,0BAA0B,EAAE,OAAO,MAAM,GAAG,OAAO,KAAK,MAAM,GAAG,KAAK,KAAW,CAAC,CAAC,EAC5G,aAAa;AAChB,WAAO,KAAK,KAAK;AAAA,EACnB;AAEA,SAAO;AACT;",
  "names": []
}
